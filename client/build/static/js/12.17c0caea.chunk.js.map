{"version":3,"sources":["redux/notification/notification.actions.ts","components/submit-button/submit-button.component.tsx","components/form/form.component.tsx","components/form-card/form-card.styles.tsx","components/form-card/form-card.component.tsx","components/add-button/add-button.component.tsx","redux/member/member.selectors.ts","components/modal/modal.component.tsx","redux/member/member.actions.ts","components/search-box/search-box.component.tsx","components/table/enchanced-table-toolbar/enchanced-table-toolbar.component.tsx","components/table/enchanced-table-head/enchanced-table-head.component.tsx","components/table/enhanced-table/enhanced-table.component.tsx","components/member-form/member-form.component.tsx","views/member/member.view.tsx"],"names":["addSuccessNotificaiton","successMessage","type","NotificationActionTypes","ADD_SUCCESS_NOTIFICATION","payload","addErrorNotification","errorMessage","ADD_ERROR_NOTIFICATION","useStyles","makeStyles","theme","createStyles","root","minWidth","margin","spacing","add","color","backgroundColor","green","edit","teal","SubmitButton","buttonType","classes","className","variant","display","flexDirection","width","Form","onSubmit","children","noValidate","autoComplete","grey","border","content","padding","title","marginBottom","index","FormCard","withoutModal","Card","CardContent","Typography","palette","success","main","AddButton","text","handleClick","otherProps","disableElevation","onClick","startIcon","selectMember","state","member","selectAllMember","createSelector","allMember","selectIsMemberFetching","isFetching","selectIsAllMemberLoaded","isLoaded","map","id","nama","status_membership","modal","alignItems","justifyContent","paper","outline","boxShadow","shadows","Modal","open","handleClose","ariaLabel","onClose","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","keepMounted","BackdropProps","timeout","in","loadAllMemberStartAsync","dispatch","MemberActionTypes","LOAD_ALL_MEMBER_START","fetchGet","process","then","response","data","LOAD_ALL_MEMBER_SUCCESS","catch","error","message","LOAD_ALL_MEMBER_FAILURE","addMemberStartAsync","memberForm","succesCallback","ADD_MEMBER_START","fetchPost","newMember","ADD_MEMBER_SUCCESS","getErrorMessage","ADD_MEMBER_FAILURE","addMemberFailure","updateMemberSuccess","updatedMember","UPDATE_MEMBER_SUCCESS","updateMemberStartAsync","UPDATE_MEMBER_START","fetchPut","UPDATE_MEMBER_FAILURE","updateMemberFailure","searchBox","position","borderRadius","shape","fade","primary","light","marginRight","marginLeft","breakpoints","up","searchIcon","height","pointerEvents","inputRoot","common","black","inputInput","paddingLeft","transition","transitions","create","SearchBox","placeholder","onChange","InputBase","e","input","inputProps","paddingRight","flex","EnhancedTableToolbar","handleSearchChange","Toolbar","component","visuallyHidden","clip","overflow","top","EnhancedTableHead","order","orderBy","action","onRequestSort","arrayDataColumn","useState","headCells","setHeadCells","useEffect","label","TableHead","TableRow","headCell","TableCell","sortDirection","TableSortLabel","active","direction","property","event","descendingComparator","a","b","getComparator","stableSort","array","comparator","stabilizedThis","el","sort","table","EnhancedTable","inputSearch","searchBasedOnId","onSearchFieldChange","handleAction","handleActionSwitch","React","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","generateTableCell","key","value","displayedValue","booleanToIcon","convertedValue","convertToBoolean","Switch","checked","aktif","size","name","emptyRows","Math","min","length","Paper","TableContainer","Table","aria-label","rowCount","TableBody","filter","element","toUpperCase","includes","filterItemBySearch","slice","row","rowId","Object","values","IconButton","style","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","target","connect","successCallback","handleModalClose","selectedMember","statusMembership","setStatusMembership","schema","yup","required","email","nullable","default","undefined","no_telp","max","tgl_lahir","useForm","resolver","yupResolver","register","errors","handleSubmit","formValues","moment","format","Grid","container","item","xs","TextField","inputRef","defaultValue","fullWidth","helperText","disabled","InputLabelProps","shrink","FormControlLabel","control","Checkbox","justify","isAllMemberLoaded","openAdd","setOpenAdd","openEdit","setOpenEdit","searchField","setSearchField","setSelectedMember","Box","m"],"mappings":"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","file":"static/js/12.17c0caea.chunk.js","sourcesContent":["import { NotificationActionTypes } from './notification.types'\r\n\r\nexport const addSuccessNotificaiton = (successMessage: string) => ({\r\n  type: NotificationActionTypes.ADD_SUCCESS_NOTIFICATION,\r\n  payload: successMessage,\r\n})\r\n\r\nexport const addErrorNotification = (errorMessage: string) => ({\r\n  type: NotificationActionTypes.ADD_ERROR_NOTIFICATION,\r\n  payload: errorMessage,\r\n})\r\n","import React from 'react'\r\nimport { Button } from '@material-ui/core'\r\n\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\r\nimport { green, teal } from '@material-ui/core/colors'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      minWidth: '100px',\r\n      margin: theme.spacing(2, 0),\r\n    },\r\n    add: {\r\n      color: 'white',\r\n      backgroundColor: green[500],\r\n      '&:hover': { backgroundColor: green[700] },\r\n    },\r\n    edit: {\r\n      color: 'white',\r\n      backgroundColor: teal[500],\r\n      '&:hover': { backgroundColor: teal[700] },\r\n    },\r\n  })\r\n)\r\n\r\ntype Props = {\r\n  buttonType: 'add' | 'edit'\r\n}\r\n\r\nconst SubmitButton: React.FC<Props> = ({ buttonType }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <div>\r\n      <Button\r\n        className={`${classes.root} ${classes[buttonType]}`}\r\n        type='submit'\r\n        variant='contained'\r\n      >\r\n        {buttonType === 'add' ? 'Submit' : 'Update'}\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SubmitButton\r\n","import React from 'react'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1, 2, 1, 0),\r\n        width: '100%',\r\n      },\r\n    },\r\n  })\r\n)\r\n\r\ntype Props = {\r\n  onSubmit: (onSubmit) => void\r\n  children: React.ReactNode\r\n}\r\n\r\nconst Form: React.FC<Props> = ({ onSubmit, children }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <form className={classes.root} noValidate autoComplete='off' onSubmit={onSubmit}>\r\n      {children}\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Form\r\n","import { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\r\nimport { grey } from '@material-ui/core/colors'\r\nconst useStyles = makeStyles(\r\n  (theme: Theme) =>\r\n    createStyles({\r\n      root: { backgroundColor: grey[100], border: '2px solid black' },\r\n      content: {\r\n        padding: theme.spacing(4),\r\n      },\r\n      title: { marginBottom: theme.spacing(2) },\r\n    }),\r\n  { index: 1 }\r\n)\r\n\r\nexport default useStyles\r\n","import React from 'react'\r\nimport { Card, CardContent, Typography } from '@material-ui/core'\r\nimport useStyles from './form-card.styles'\r\ntype Props = {\r\n  title: String\r\n  children: React.ReactNode\r\n  withoutModal?: boolean\r\n}\r\nconst FormCard: React.FC<Props> = ({ title, children, withoutModal }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Card className={withoutModal ? '' : classes.root}>\r\n      <CardContent className={classes.content}>\r\n        <Typography variant='h5' className={classes.title}>\r\n          {title}\r\n        </Typography>\r\n        {children}\r\n      </CardContent>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default FormCard\r\n","import React from 'react'\r\nimport { Button } from '@material-ui/core'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\r\nimport { green } from '@material-ui/core/colors'\r\nimport AddIcon from '@material-ui/icons/Add'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      color: '#fff',\r\n      backgroundColor: theme.palette.success.main,\r\n      '&:hover': {\r\n        backgroundColor: green[700],\r\n      },\r\n    },\r\n  })\r\n)\r\n\r\ntype Props = {\r\n  text: string\r\n  handleClick: () => void\r\n  [otherProps: string]: any\r\n}\r\n\r\nconst AddButton: React.FC<Props> = ({ text, handleClick, ...otherProps }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <Button\r\n      {...otherProps}\r\n      variant='contained'\r\n      disableElevation\r\n      className={classes.root}\r\n      onClick={handleClick}\r\n      startIcon={<AddIcon />}\r\n    >\r\n      {text}\r\n    </Button>\r\n  )\r\n}\r\n\r\nexport default AddButton\r\n","import { createSelector } from 'reselect'\r\nimport { RootState } from '../root-reducer'\r\nimport { MemberState, MemberType } from './member.types'\r\n\r\nexport const selectMember = (state: RootState): MemberState => state.member\r\n\r\nexport const selectAllMember = createSelector([selectMember], (member) => member.allMember)\r\n\r\nexport const selectIsMemberFetching = createSelector([selectMember], (member) => member.isFetching)\r\n\r\nexport const selectIsAllMemberLoaded = createSelector([selectMember], (member) => member.isLoaded)\r\n\r\nexport const selectAllMemberNameWithId = createSelector([selectAllMember], (allMember) => {\r\n  if (!allMember) return null\r\n  return allMember.map((member: MemberType) => ({ id: member.id, nama: member.nama }))\r\n})\r\nexport const selectAllMemberIdNameStatus = createSelector([selectAllMember], (allMember) => {\r\n  if (!allMember) return null\r\n  return allMember.map((member: MemberType) => ({\r\n    id: member.id,\r\n    nama: member.nama,\r\n    status_membership: member.status_membership,\r\n  }))\r\n})\r\n\r\nexport const selectMemberErrorMessage = createSelector(\r\n  [selectMember],\r\n  (member) => member.errorMessage\r\n)\r\n","import React from 'react'\r\nimport ModalMUI from '@material-ui/core/Modal'\r\nimport { Fade, Backdrop, Box } from '@material-ui/core'\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modal: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    paper: {\r\n      outline: 0,\r\n      boxShadow: theme.shadows[5],\r\n      width: '30%',\r\n    },\r\n  })\r\n)\r\n\r\ntype Props = {\r\n  open: boolean\r\n  handleClose: () => any\r\n  ariaLabel: string\r\n  children: React.ReactElement\r\n}\r\n\r\nconst Modal: React.FC<Props> = ({ children, open, handleClose, ariaLabel }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <ModalMUI\r\n      className={classes.modal}\r\n      open={open}\r\n      onClose={handleClose}\r\n      aria-labelledby={ariaLabel}\r\n      aria-describedby={ariaLabel}\r\n      closeAfterTransition\r\n      BackdropComponent={Backdrop}\r\n      keepMounted={false}\r\n      BackdropProps={{\r\n        timeout: 500,\r\n      }}\r\n    >\r\n      <Fade in={open}>\r\n        <Box className={classes.paper}>{children}</Box>\r\n      </Fade>\r\n    </ModalMUI>\r\n  )\r\n}\r\n\r\nexport default Modal\r\n","import { MemberActionTypes, MemberType } from './member.types'\r\nimport { fetchPost, fetchGet, fetchPut, getErrorMessage } from '../../fetch/fetch'\r\nimport { addSuccessNotificaiton, addErrorNotification } from '../notification/notification.actions'\r\nexport const loadAllMemberStart = () => ({\r\n  type: MemberActionTypes.LOAD_ALL_MEMBER_START,\r\n})\r\n\r\nexport const loadAllMemberSuccess = (allMember: Array<MemberType>) => ({\r\n  type: MemberActionTypes.LOAD_ALL_MEMBER_SUCCESS,\r\n  payload: allMember,\r\n})\r\n\r\nexport const loadAllMemberFailure = (errorMessage: string) => ({\r\n  type: MemberActionTypes.LOAD_ALL_MEMBER_FAILURE,\r\n  payload: errorMessage,\r\n})\r\n\r\nexport const loadAllMemberStartAsync = () => {\r\n  return (dispatch) => {\r\n    dispatch(loadAllMemberStart())\r\n    fetchGet(process.env.REACT_APP_MEMBER_URL)\r\n      .then((response) => dispatch(loadAllMemberSuccess(response.data)))\r\n      .catch((error) => dispatch(loadAllMemberFailure(error.message)))\r\n  }\r\n}\r\n\r\nexport const addMemberStart = () => ({\r\n  type: MemberActionTypes.ADD_MEMBER_START,\r\n})\r\n\r\nexport const addMemberSuccess = (newMember: MemberType) => ({\r\n  type: MemberActionTypes.ADD_MEMBER_SUCCESS,\r\n  payload: newMember,\r\n})\r\n\r\nexport const addMemberFailure = (errorMessage: string) => ({\r\n  type: MemberActionTypes.ADD_MEMBER_FAILURE,\r\n  payload: errorMessage,\r\n})\r\n\r\nexport const addMemberStartAsync = (memberForm: MemberType, succesCallback?: () => void) => {\r\n  return (dispatch) => {\r\n    dispatch(addMemberStart())\r\n    fetchPost(process.env.REACT_APP_MEMBER_URL, memberForm)\r\n      .then((response) => {\r\n        dispatch(addMemberSuccess(response.data))\r\n        if (succesCallback) succesCallback()\r\n        dispatch(addSuccessNotificaiton(`menambahkan member ${memberForm.nama}`))\r\n      })\r\n      .catch((error) => {\r\n        const errorMessage = getErrorMessage(error)\r\n        dispatch(addMemberFailure(errorMessage))\r\n        dispatch(addErrorNotification(`menambahkan member, reason: ${errorMessage}`))\r\n      })\r\n  }\r\n}\r\n\r\nexport const updateMemberStart = () => ({\r\n  type: MemberActionTypes.UPDATE_MEMBER_START,\r\n})\r\n\r\nexport const updateMemberSuccess = (updatedMember: MemberType) => ({\r\n  type: MemberActionTypes.UPDATE_MEMBER_SUCCESS,\r\n  payload: updatedMember,\r\n})\r\n\r\nexport const updateMemberFailure = (errorMessage: string) => ({\r\n  type: MemberActionTypes.UPDATE_MEMBER_FAILURE,\r\n  payload: errorMessage,\r\n})\r\n\r\nexport const updateMemberStartAsync = (updatedMember: MemberType, succesCallback?: () => void) => {\r\n  return (dispatch) => {\r\n    dispatch(updateMemberStart())\r\n    fetchPut(process.env.REACT_APP_MEMBER_URL, updatedMember)\r\n      .then((response) => {\r\n        dispatch(updateMemberSuccess(response.data))\r\n        if (succesCallback) succesCallback()\r\n        dispatch(addSuccessNotificaiton(`update member ${updatedMember.nama}`))\r\n      })\r\n      .catch((error) => {\r\n        const errorMessage = getErrorMessage(error)\r\n        dispatch(updateMemberFailure(errorMessage))\r\n        dispatch(addErrorNotification(`update member, reason: ${errorMessage}`))\r\n      })\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { InputBase } from '@material-ui/core'\r\nimport { createStyles, Theme, makeStyles, fade } from '@material-ui/core/styles'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    searchBox: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.primary.light, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.primary.light, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      padding: theme.spacing(0, 2),\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: theme.palette.common.black,\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n  })\r\n)\r\n\r\ntype Props = {\r\n  placeholder: string\r\n  onChange: (e) => void\r\n}\r\n\r\nconst SearchBox: React.FC<Props> = ({ placeholder, onChange }) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <div className={classes.searchBox}>\r\n      <div className={classes.searchIcon}>\r\n        <SearchIcon />\r\n      </div>\r\n      <InputBase\r\n        onChange={(e) => onChange(e)}\r\n        placeholder={placeholder}\r\n        classes={{\r\n          root: classes.inputRoot,\r\n          input: classes.inputInput,\r\n        }}\r\n        inputProps={{ 'aria-label': 'search' }}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SearchBox\r\n","import React from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport { Toolbar, Typography } from '@material-ui/core'\r\nimport SearchBox from '../../search-box/search-box.component'\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n    title: {\r\n      flex: '1 1 100%',\r\n    },\r\n  })\r\n)\r\n\r\ntype Props = {\r\n  title: string\r\n  placeholder: string\r\n  handleSearchChange: (e) => void\r\n}\r\n\r\nexport const EnhancedTableToolbar: React.FC<Props> = ({\r\n  title,\r\n  placeholder,\r\n  handleSearchChange,\r\n}) => {\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <Toolbar className={classes.root}>\r\n      <Typography className={classes.title} variant='h6' id='tableTitle' component='div'>\r\n        {title}\r\n      </Typography>\r\n      <SearchBox onChange={handleSearchChange} placeholder={placeholder} />\r\n    </Toolbar>\r\n  )\r\n}\r\n\r\nexport default EnhancedTableToolbar\r\n","import React, { useEffect, useState } from 'react'\r\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles'\r\nimport { TableHead, TableRow, TableCell, TableSortLabel } from '@material-ui/core'\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n  })\r\n)\r\n\r\ntype HeadCell = {\r\n  id: string\r\n  label: string\r\n}\r\n\r\ntype Props = {\r\n  arrayDataColumn: Array<HeadCell>\r\n  onRequestSort: (event: React.MouseEvent<unknown>, property: string) => void\r\n  order: 'asc' | 'desc'\r\n  orderBy: string | number\r\n  rowCount: number\r\n  action?: boolean\r\n}\r\n\r\nexport const EnhancedTableHead: React.FC<Props> = ({\r\n  order,\r\n  orderBy,\r\n  action,\r\n  onRequestSort,\r\n  arrayDataColumn,\r\n}) => {\r\n  const classes = useStyles()\r\n  const [headCells, setHeadCells] = useState<HeadCell[]>([])\r\n\r\n  useEffect(() => {\r\n    if (action) setHeadCells([...arrayDataColumn, { id: 'action', label: 'Action' }])\r\n    else setHeadCells(arrayDataColumn)\r\n  }, [action, arrayDataColumn])\r\n\r\n  const createSortHandler = (property: string) => (event: React.MouseEvent<unknown>) => {\r\n    onRequestSort(event, property)\r\n  }\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell key={headCell.id} sortDirection={orderBy === headCell.id ? order : false}>\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  )\r\n}\r\n\r\nexport default EnhancedTableHead\r\n","import React from 'react'\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles'\r\nimport {\r\n  Paper,\r\n  Table,\r\n  TableContainer,\r\n  TableCell,\r\n  TablePagination,\r\n  TableRow,\r\n  TableBody,\r\n  IconButton,\r\n  Switch,\r\n} from '@material-ui/core'\r\n\r\nimport { green } from '@material-ui/core/colors'\r\nimport EnhancedTableToolbar from '../enchanced-table-toolbar/enchanced-table-toolbar.component'\r\nimport EnhancedTableHead from '../enchanced-table-head/enchanced-table-head.component'\r\nimport EditAttributesIcon from '@material-ui/icons/EditAttributes'\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nfunction descendingComparator<T>(a: T, b: T, orderBy: keyof T) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1\r\n  }\r\n  return 0\r\n}\r\n\r\ntype Order = 'asc' | 'desc'\r\n\r\nconst getComparator = <Key extends keyof any>(\r\n  order: Order,\r\n  orderBy: Key\r\n): ((a: { [key in Key]: number | string }, b: { [key in Key]: number | string }) => number) => {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy)\r\n}\r\n\r\nconst stableSort = <T extends unknown>(array: T[], comparator: (a: T, b: T) => number) => {\r\n  const stabilizedThis = array.map((el, index) => [el, index] as [T, number])\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0])\r\n    if (order !== 0) return order\r\n    return a[1] - b[1]\r\n  })\r\n  return stabilizedThis.map((el) => el[0])\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      width: '100%',\r\n      padding: theme.spacing(0, 2),\r\n    },\r\n    paper: {\r\n      width: '100%',\r\n      marginBottom: theme.spacing(2),\r\n      padding: theme.spacing(3),\r\n    },\r\n    table: {\r\n      minWidth: 750,\r\n    },\r\n    visuallyHidden: {\r\n      border: 0,\r\n      clip: 'rect(0 0 0 0)',\r\n      height: 1,\r\n      margin: -1,\r\n      overflow: 'hidden',\r\n      padding: 0,\r\n      position: 'absolute',\r\n      top: 20,\r\n      width: 1,\r\n    },\r\n  })\r\n)\r\n\r\ntype Data = {\r\n  id?: string\r\n  [other: string]: any\r\n}\r\ntype Props = {\r\n  data: Array<Data> | any\r\n  arrayDataColumn: Array<{ id: string; label: string }>\r\n  title: string\r\n  placeholder: string\r\n  inputSearch: string\r\n  searchBasedOnId: string\r\n  onSearchFieldChange: (e) => void\r\n  handleAction?: (data) => void\r\n  handleActionSwitch?: (data) => void\r\n  [other: string]: any\r\n}\r\n\r\nconst EnhancedTable: React.FC<Props> = ({\r\n  data,\r\n  arrayDataColumn,\r\n  title,\r\n  placeholder,\r\n  inputSearch,\r\n  searchBasedOnId,\r\n  onSearchFieldChange,\r\n  handleAction,\r\n  handleActionSwitch,\r\n}) => {\r\n  const classes = useStyles()\r\n  const [order, setOrder] = React.useState<Order>('asc')\r\n  const [orderBy, setOrderBy] = React.useState<keyof Data>('')\r\n  const [page, setPage] = React.useState(0)\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10)\r\n\r\n  const handleRequestSort = (event: React.MouseEvent<unknown>, property: keyof Data) => {\r\n    const isAsc = orderBy === property && order === 'asc'\r\n    setOrder(isAsc ? 'desc' : 'asc')\r\n    setOrderBy(property)\r\n  }\r\n\r\n  const handleChangePage = (event: unknown, newPage: number) => {\r\n    setPage(newPage)\r\n  }\r\n\r\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10))\r\n    setPage(0)\r\n  }\r\n\r\n  const filterItemBySearch = (input: string, data: Array<Data>) => {\r\n    if (input)\r\n      return data.filter((element) =>\r\n        element[searchBasedOnId].toUpperCase().includes(input.toUpperCase())\r\n      )\r\n    return data\r\n  }\r\n\r\n  const booleanToIcon = (value) => {\r\n    if (value === 'true') return <CheckBoxIcon />\r\n    else return <CloseIcon />\r\n  }\r\n  const convertToBoolean = (value) => {\r\n    if (typeof value === 'boolean') return value\r\n    else return value === 'true'\r\n  }\r\n  const generateTableCell = (id, key, value) => {\r\n    let displayedValue\r\n    if (key === 'status_membership') displayedValue = booleanToIcon(value)\r\n    else if (key === 'aktif' && handleActionSwitch) {\r\n      let convertedValue = convertToBoolean(value)\r\n      displayedValue = (\r\n        <Switch\r\n          checked={convertedValue}\r\n          onChange={(e) => handleActionSwitch({ id: id, aktif: !convertedValue })}\r\n          size='small'\r\n          color='primary'\r\n          name='aktif'\r\n        />\r\n      )\r\n    } else displayedValue = value\r\n\r\n    return <TableCell key={`${id}-${key}`}>{displayedValue}</TableCell>\r\n  }\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage)\r\n\r\n  return data ? (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <EnhancedTableToolbar\r\n          title={title}\r\n          placeholder={placeholder}\r\n          handleSearchChange={onSearchFieldChange}\r\n        />\r\n\r\n        <TableContainer>\r\n          <Table className={classes.table} aria-labelledby='tableTitle' aria-label='enhanced table'>\r\n            <EnhancedTableHead\r\n              action={handleAction ? true : false}\r\n              arrayDataColumn={arrayDataColumn}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={data.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(filterItemBySearch(inputSearch, data), getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const rowId = Object.values(row)[0]\r\n                  return (\r\n                    <TableRow key={rowId}>\r\n                      {arrayDataColumn.map(({ id, label }) => {\r\n                        const tableCell = generateTableCell(rowId, id, row[id])\r\n                        return tableCell\r\n                      })}\r\n                      {handleAction && (\r\n                        <TableCell key={`edit-${Object.values(row)[0]}`}>\r\n                          <IconButton\r\n                            aria-label='edit'\r\n                            size='small'\r\n                            onClick={(e) => handleAction(row)}\r\n                          >\r\n                            <EditAttributesIcon style={{ color: green[500] }} />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      )}\r\n                    </TableRow>\r\n                  )\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: 53 * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25, { label: 'All', value: data.length }]}\r\n          component='div'\r\n          count={data.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  ) : null\r\n}\r\n\r\nexport default EnhancedTable\r\n","import React, { useEffect, useState } from 'react'\r\nimport { TextField, Grid, FormControlLabel, Checkbox } from '@material-ui/core'\r\nimport FormCard from '../form-card/form-card.component'\r\nimport { useForm } from 'react-hook-form'\r\nimport { yupResolver } from '@hookform/resolvers/yup'\r\nimport * as yup from 'yup'\r\nimport { connect } from 'react-redux'\r\nimport { addMemberStartAsync, updateMemberStartAsync } from '../../redux/member/member.actions'\r\nimport { MemberType } from '../../redux/member/member.types'\r\nimport SubmitButton from '../submit-button/submit-button.component'\r\nimport { selectIsMemberFetching } from '../../redux/member/member.selectors'\r\nimport { RootState } from '../../redux/root-reducer'\r\nimport CircularLoading from '../circular-loading/circular-loading.component'\r\nimport moment from 'moment'\r\nimport Form from '../form/form.component'\r\n\r\ntype FORM_DATA = {\r\n  nama: ''\r\n  email: '' | undefined\r\n  no_telp: ''\r\n  tgl_lahir: '' | undefined\r\n  status_membership?: boolean\r\n}\r\n\r\ntype Props = {\r\n  addMemberStartAsync: (member: FORM_DATA, successCallback?) => Promise<any>\r\n  updateMemberStartAsync: (member, successCallback?) => Promise<any>\r\n  handleModalClose: () => void\r\n  isFetching: boolean\r\n  edit?: true\r\n  selectedMember?: MemberType | null\r\n}\r\n\r\nconst MemberForm: React.FC<Props> = ({\r\n  addMemberStartAsync,\r\n  updateMemberStartAsync,\r\n  handleModalClose,\r\n  isFetching,\r\n  edit,\r\n  selectedMember,\r\n}) => {\r\n  const [statusMembership, setStatusMembership] = useState(false)\r\n\r\n  useEffect(() => {\r\n    // transform string 'true' to boolean\r\n    if (selectedMember) {\r\n      setStatusMembership(selectedMember.status_membership === 'true')\r\n    }\r\n  }, [selectedMember])\r\n\r\n  const schema = yup.object().shape({\r\n    nama: yup.string().required(),\r\n    email: yup.string().email().nullable().default(undefined),\r\n    no_telp: yup.string().required().max(14).min(10),\r\n    tgl_lahir: yup.string().nullable().default(undefined),\r\n  })\r\n\r\n  const { register, errors, handleSubmit } = useForm<FORM_DATA>({\r\n    resolver: yupResolver(schema),\r\n  })\r\n\r\n  const onSubmit = async (formValues) => {\r\n    if (!formValues.email) formValues.email = null\r\n    if (!formValues.tgl_lahir) formValues.tgl_lahir = null\r\n    else formValues.tgl_lahir = moment(formValues.tgl_lahir).format('DD-MM-YYYY')\r\n    formValues.status_membership = false\r\n\r\n    if (edit) {\r\n      updateMemberStartAsync(\r\n        {\r\n          id: selectedMember!.id,\r\n          ...formValues,\r\n          status_membership: statusMembership,\r\n        },\r\n        handleModalClose\r\n      )\r\n    } else {\r\n      addMemberStartAsync(formValues, handleModalClose)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <FormCard title={`${edit ? 'Edit' : 'Daftar'} Member`}>\r\n      {isFetching ? (\r\n        <CircularLoading height={'200px'} />\r\n      ) : (\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={edit ? 10 : 12}>\r\n              <TextField\r\n                inputRef={register}\r\n                error={!!errors.nama}\r\n                defaultValue={selectedMember?.nama}\r\n                name='nama'\r\n                fullWidth\r\n                label='Nama'\r\n                helperText={errors.nama?.message}\r\n              />\r\n            </Grid>\r\n            {edit ? (\r\n              <Grid item xs={2}>\r\n                <TextField value={selectedMember?.id} disabled name='id' label='ID' />\r\n              </Grid>\r\n            ) : null}\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                inputRef={register}\r\n                error={!!errors.email}\r\n                defaultValue={selectedMember?.email}\r\n                name='email'\r\n                fullWidth\r\n                label='Email'\r\n                type='email'\r\n                helperText={errors.email?.message}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                inputRef={register}\r\n                error={!!errors.no_telp}\r\n                defaultValue={selectedMember?.no_telp}\r\n                name='no_telp'\r\n                label='No Telp'\r\n                helperText={errors.no_telp?.message}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <TextField\r\n                inputRef={register}\r\n                error={!!errors.tgl_lahir}\r\n                name='tgl_lahir'\r\n                label='Tanggal lahir'\r\n                type='date'\r\n                InputLabelProps={{ shrink: true }}\r\n                helperText={errors.tgl_lahir?.message}\r\n              />\r\n            </Grid>\r\n            {edit && (\r\n              <Grid item xs={12}>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox\r\n                      inputRef={register}\r\n                      checked={statusMembership}\r\n                      onChange={() => setStatusMembership(!statusMembership)}\r\n                      name='status_membership'\r\n                    />\r\n                  }\r\n                  label='Status Membership'\r\n                />\r\n              </Grid>\r\n            )}\r\n            <Grid container justify='flex-end'>\r\n              <Grid item>\r\n                <SubmitButton buttonType={edit ? 'edit' : 'add'} />\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Form>\r\n      )}\r\n    </FormCard>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = (state: RootState) => ({\r\n  isFetching: selectIsMemberFetching(state),\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addMemberStartAsync: (member, successCallback?) =>\r\n    dispatch(addMemberStartAsync(member, successCallback)),\r\n  updateMemberStartAsync: (member, successCallback?) =>\r\n    dispatch(updateMemberStartAsync(member, successCallback)),\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MemberForm)\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Grid, Box } from '@material-ui/core'\r\nimport AddButton from '../../components/add-button/add-button.component'\r\nimport MemberForm from '../../components/member-form/member-form.component'\r\nimport Modal from '../../components/modal/modal.component'\r\nimport EnchancedTable from '../../components/table/enhanced-table/enhanced-table.component'\r\nimport CircularLoading from '../../components/circular-loading/circular-loading.component'\r\nimport { connect } from 'react-redux'\r\nimport { RootState } from '../../redux/root-reducer'\r\nimport { selectAllMember, selectIsAllMemberLoaded } from '../../redux/member/member.selectors'\r\nimport { MemberType } from '../../redux/member/member.types'\r\nimport { loadAllMemberStartAsync } from '../../redux/member/member.actions'\r\n\r\ntype Props = {\r\n  allMember: Array<MemberType> | null\r\n  isAllMemberLoaded: boolean\r\n  loadAllMemberStartAsync: () => void\r\n}\r\n\r\nconst Member: React.FC<Props> = ({ allMember, isAllMemberLoaded, loadAllMemberStartAsync }) => {\r\n  const [openAdd, setOpenAdd] = useState(false)\r\n  const [openEdit, setOpenEdit] = useState(false)\r\n  const [searchField, setSearchField] = useState('')\r\n  const [selectedMember, setSelectedMember] = useState<MemberType | null>(null)\r\n\r\n  useEffect(() => {\r\n    loadAllMemberStartAsync()\r\n  }, [loadAllMemberStartAsync])\r\n\r\n  const handleSearchFieldChange = (e) => {\r\n    setSearchField(e.target.value)\r\n  }\r\n  const handleAction = (member: MemberType) => {\r\n    setSelectedMember(member)\r\n    setOpenEdit(true)\r\n  }\r\n  const handleModalAddClose = () => {\r\n    setOpenAdd(false)\r\n  }\r\n\r\n  const handleModalEditClose = () => {\r\n    setOpenEdit(false)\r\n  }\r\n  const headData: Array<{ id: string; label: string }> = [\r\n    { id: 'id', label: 'ID' },\r\n    { id: 'nama', label: 'Nama' },\r\n    { id: 'no_telp', label: 'No. Telp' },\r\n    { id: 'email', label: 'Email' },\r\n    { id: 'tgl_lahir', label: 'Tgl Lahir' },\r\n    { id: 'status_membership', label: 'Membership?' },\r\n  ]\r\n\r\n  return isAllMemberLoaded ? (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={6}></Grid>\r\n      <Grid container item justify='flex-end' xs={6}>\r\n        <Box m={2}>\r\n          <AddButton text='Tambah Member' handleClick={() => setOpenAdd(true)} />\r\n          <Modal open={openAdd} handleClose={() => setOpenAdd(false)} ariaLabel='modal-add'>\r\n            <MemberForm handleModalClose={handleModalAddClose} />\r\n          </Modal>\r\n          <Modal open={openEdit} handleClose={() => setOpenEdit(false)} ariaLabel='modal-edit'>\r\n            <MemberForm\r\n              edit\r\n              selectedMember={selectedMember}\r\n              handleModalClose={handleModalEditClose}\r\n            />\r\n          </Modal>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        {allMember && (\r\n          <EnchancedTable\r\n            searchBasedOnId='nama'\r\n            inputSearch={searchField}\r\n            onSearchFieldChange={handleSearchFieldChange}\r\n            title='Member'\r\n            data={allMember}\r\n            arrayDataColumn={headData}\r\n            placeholder='Search nama...'\r\n            handleAction={handleAction}\r\n          />\r\n        )}\r\n      </Grid>\r\n    </Grid>\r\n  ) : (\r\n    <CircularLoading />\r\n  )\r\n}\r\nconst mapStateToProps = (state: RootState) => ({\r\n  allMember: selectAllMember(state),\r\n  isAllMemberLoaded: selectIsAllMemberLoaded(state),\r\n})\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  loadAllMemberStartAsync: () => dispatch(loadAllMemberStartAsync()),\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Member)\r\n"],"sourceRoot":""}